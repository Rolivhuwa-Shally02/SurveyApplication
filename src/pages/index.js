import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import PersonalDetials from "../components/PersonalDetails";
import SurveyTable from "../components/SurveyTable";
import FoodSelector from "@/components/Foodselector";
import Navbar from "@/components/navbar";
import { useState, useEffect } from "react";

import "bootstrap/dist/css/bootstrap.min.css";

const convertRatingtoInteger = (rating) => {
  switch (rating) {
    case "stronglyAgree":
      return 5;
    case "agree":
      return 4;
    case "neutral":
      return 3;
    case "disagree":
      return 2;
    case "stronglyDisagree":
      return 1;
    // Add more case clauses as needed
    default:
    // statements to be executed if no case matches
  }
};
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [dataFromChild, setDataFromChild] = useState({
    fullname: null,
    email: null,
    dateofbirth: null,
    contactnumber: null,
    favoritefood: null,
    watchmovies: null,
    listenradio: null,
    eatout: null,
    watchtv: null,
  });
  const [data, setData] = useState(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const fetchData = async () => {
    try {
      const response = await fetch("http://localhost:3000/api/savetodb", {
        method: "POST",
        body: JSON.stringify(dataFromChild), // Include data in the body
        headers: {
          "Content-Type": "application/json",
        },
      });

      const jsonData = await response.json();
      setData(jsonData);
    } catch (error) {
      setError(error.message);
    } finally {
      setLoading(false);
    }
  };

  const handleChangeToParent = (category, value) => {
    if (category == "surveytable") {
      setDataFromChild({
        ...dataFromChild,
        ["watchmovies"]: convertRatingtoInteger(value.movies),
        ["listenradio"]: convertRatingtoInteger(value.radio),
        ["eatout"]: convertRatingtoInteger(value.eatOut),
        ["watchtv"]: convertRatingtoInteger(value.watchTv),
      });
    } else if (category == "personaldetails") {
      setDataFromChild({
        ...dataFromChild,
        ["fullname"]: value.firstName,
        ["email"]: value.email,
        ["dateofbirth"]: value.dob,
        ["contactnumber"]: value.contactNumber,
      });
    } else {
      setDataFromChild({
        ...dataFromChild,
        [category]: value,
      });
    }
    //console.log("category: ", category, "value: ", value);
  };

  return (
    <>
      <Head>
        <title>Survey Application</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />

      <main className={`${styles.main} ${inter.className}`}>
        <PersonalDetials onData={handleChangeToParent} />
        <FoodSelector onData={handleChangeToParent} />
        <SurveyTable onData={handleChangeToParent} />
        {/* <pre>{JSON.stringify(dataFromChild, null, 2)}</pre> */}
        <button class="btn btn-primary" onClick={() => fetchData()}>
          Submit
        </button>
        {/* <pre>{JSON.stringify(loading, null, 2)}</pre>
        <pre>{JSON.stringify(error, null, 2)}</pre> */}
      </main>
    </>
  );
}
